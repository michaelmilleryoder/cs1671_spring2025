[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project",
    "section": "",
    "text": "Last revised 2025-01-06.\nA major component of this course is a hands-on final project. In this project, students will demonstrate an ability to build and evaluate an NLP system that takes in language data and automatically produces some sort of output.\nProjects will be done in groups of 2-4 students. Groups will be assigned by teaching staff based on interests, skills, and group preferences from students."
  },
  {
    "objectID": "project.html#project-idea-submission-form",
    "href": "project.html#project-idea-submission-form",
    "title": "Project",
    "section": "Project idea submission form",
    "text": "Project idea submission form\nDue 01-30.\nWith this form, you can fill out potential project ideas you might be interested in working on. You can fill out ideas from the example projects listed on this website or other possible ideas you have for computer systems that process language, interesting text datasets you’d like to work on, really anything! You can fill out as many ideas as you’d like in this form. Ideas do not have to be fully sketched out. Submitting an idea does mean you will necessarily work on it. These ideas will be presented to all students anonymously. Each student must submit at least one idea for credit on this assignment, even if it’s just chosen from the example projects."
  },
  {
    "objectID": "project.html#project-idea-ranking-form",
    "href": "project.html#project-idea-ranking-form",
    "title": "Project",
    "section": "Project idea ranking form",
    "text": "Project idea ranking form\nDue 02-06.\nIn a form, students will rank which project ideas they would prefer to work on, as well as list any personnel preferences, interests and skills you have. Teaching staff will take all of this information into account when assigning groups."
  },
  {
    "objectID": "project.html#project-proposal",
    "href": "project.html#project-proposal",
    "title": "Project",
    "section": "Project proposal",
    "text": "Project proposal\nDue 02-28.\nPlease submit one per group on Canvas. There is no required length or format for this report. This proposal will be a report with answers to a series of questions. More information will be added later. This proposal will include a peer review where you will rate your own performance the performance of other group members."
  },
  {
    "objectID": "project.html#project-proposal-presentation",
    "href": "project.html#project-proposal-presentation",
    "title": "Project",
    "section": "Project proposal presentation",
    "text": "Project proposal presentation\nIn class 03-12.\nGroups will make a brief presentation to the class outlining their proposed project, with Q&A and opportunities for feedback from other students. Please plan for maximum 5-minute presentations not including Q&A, which will be held right afterward for each group.  Presentations are not graded. Cover at least these key points (more information will be added later):\n\nWhat data you are planning to use\nWhat approach/methods will you be taking\nEvaluation of your approach (or dataset, if it’s a dataset contribution)"
  },
  {
    "objectID": "project.html#progress-report",
    "href": "project.html#progress-report",
    "title": "Project",
    "section": "Progress report",
    "text": "Progress report\nDue 03-20.\nRequirements TBD. Also list any questions you have or resources you will need to successfully complete the project by the final deadline, if you have any. You do not have to repeat information from the project proposal except for basic descriptions of the project."
  },
  {
    "objectID": "project.html#final-presentation",
    "href": "project.html#final-presentation",
    "title": "Project",
    "section": "Final presentation",
    "text": "Final presentation\nIn class TBD.\nRequirements TBD. Groups will present their finished work to the group, with Q&A and feedback opportunities from students. Please prepare a maximum 5-minute presentation."
  },
  {
    "objectID": "project.html#final-report",
    "href": "project.html#final-report",
    "title": "Project",
    "section": "Final report",
    "text": "Final report\nDue 04-24.\nRequirements TBD. At the end of the course, groups will provide a written report of their project."
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "Homework 1: Text and string processing in Python",
    "section": "",
    "text": "Due 2025-01-23, 11:59pm. Instructions last updated 2025-01-17.\nWelcome to CS 1671/2071! In this first assignment, you’ll learn and practice some coding skills that will help you deal with text data for NLP. You will be reading/writing files, using regular expressions, and processing strings in Python. Please make sure to use Python 3 in your code. You may use any Python packages you like."
  },
  {
    "objectID": "hw1.html#learning-objectives",
    "href": "hw1.html#learning-objectives",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Learning objectives",
    "text": "Learning objectives\nAfter completing this assignments, you will be able to:\n\nLoad in text files into different data structures in Python\nUse regular expressions in Python to find and manipulate strings\nWrite Python code to produce basic statistics about a dataset of text\nSpecify the Python software environment you used to run a script"
  },
  {
    "objectID": "hw1.html#resources-to-download",
    "href": "hw1.html#resources-to-download",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Resources to download",
    "text": "Resources to download\n\nSkeleton code\nPlease download and add all your answers to the following Python script template file. It is a “skeleton” script where only the formatting is provided and you fill in the code for the rest of the file.\n\nhw1_skeleton.py\n\nPlease use a version of Python 3 to run your filled-out script. We encourage you to use a Python virtual environment to code this and future course assignments. Virtual environments are a way to isolate your code and its dependencies from the rest of the python programs and packages installed on your system. This is very helpful for ‘good science’ as we avoid any issues sharing our work with others and having packages break, and having a saved state where we know code works. This is a feature baked into Python with the venv module. Third-party tools are another way to create and manage virtual environments. Anaconda is a free one that I recommend.\nOne of the deliverables for this assignment is to specify the packages and package versions in the Python environment you used while running your code. This is most straightforward within a virtual environment, though you can provide all the Python packages installed on your system as an alternative.\n\n\nData\nFor Part 1, you will need the following text file:\n\nspanish_test.txt\n\nFor Part 3, you will need a small dataset of wine reviews. You can download it and unpack it in a terminal as follows:\n$ wget http://computational-linguistics-class.org/homework/python-and-bash/data.tgz\n$ tar -xzvf data.tgz \n$ ls data\nstopwords.txt    wine.txt"
  },
  {
    "objectID": "hw1.html#part-1-file-inputoutput-io",
    "href": "hw1.html#part-1-file-inputoutput-io",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Part 1: File input/output (I/O)",
    "text": "Part 1: File input/output (I/O)\nGiven a file, it is important to know how to open, read, and write using Python functions: open(), read(), and write(). The read() function returns the entire contents of the file as a string. It is often useful to read each line of a file into a list. You can do this with the readlines() function, which will split on the newline character and return the lines as a list, presevering the newline character. You can also use the splitlines() function, which will remove the newline characters.\nTake some time to also read through the encoding argument for open() as that can be a source of trouble for files that aren’t being read in properly.\nHere’s some example code for reading and writing files in Python:\n# read files\nwith open('test.txt') as f:\n    contents = f.read().splitlines()\nfor s in contents:\n    print(s)\n\n# write files\nwith open('test.txt', 'w')\n    for s in ['line1', 'line2', 'line3', 'line4'] :\n        file.write(s+'\\n')\nOften we would like to associate metadata (such as a label) with lines or chunks of text in NLP. One way of doing this is by formatting the data as a table or spreadsheet (a CSV, comma-separated value, file) with the text in a column and other columns of metadata about that text.\nFill in the text_to_csv function in hw1_skeleton.py. You can use the csv module or the more powerful pandas package, particularly the read_csv and to_csv methods to handle data in CSV format. In this function, please fill out code to read in the spanish_test.txt file and produce a CSV file with the following columns:\n\nline_id: an integer ID column for each line, starting from 1 and continuing.\ntext: the text of the line, without any newline character included\ncharacter_length: the number of characters (length) of the line, including whitespace (but not the newline characters you removed from the text column). See the Python string module or pandas string functions.\n\nSave this CSV file as spanish_test.csv. It will be part of your final submission."
  },
  {
    "objectID": "hw1.html#part-2-regular-expressions",
    "href": "hw1.html#part-2-regular-expressions",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Part 2: Regular expressions",
    "text": "Part 2: Regular expressions\nRegular expressions are a powerful way to process text by describing text patterns. Here are useful resources you may need:\n\nA fancy website to test your regex.\nPython re package that provides many regular expression functions for use.\nChapter 2 of the textbook\n\n# match patterns in given string\nimport re\npattern = 'pitt'\ntest_string = 'pittsburgh'\nresult = re.match(pattern, test_string)\nif result:\n    print(\"Search successful.\")\nelse:\n    print(\"Search unsuccessful.\") \nIn this part, you need to fill in the functions check_for_foo_or_bar and replace_rgb in the skeleton script.\n2.1. Check whether the input string meets the following condition. Useful documentation: Python match objects\n\nThe string must have both the word foo and the word bar in it, whitespace- or punctuation-delimited from other words. (not, e.g., words like foobar or bart that merely contain the word bar). See the .\nReturn True if the condition is met, false otherwise.\n\n2.2. Replace all RGB or hex colors with the word COLOR. Useful documentation: Python regular expression substitutions\n\nPossible example formats for a color string: #0f0, #0b013a, #37EfaA, rgb(1, 1, 1), rgb(255, 19, 32), rgb(00, 01, 18), or rgb(0.1, 0.5, 1.0).\nNote that there is no need to try other formats that are not listed above. There is also no need to validate the ranges of the rgb values.\nHowever, you should make sure all numbers are indeed valid numbers. For example, #xyzxyz should return false as these are not valid hex digits. Similarly, rgb(c00l, 255, 255) should return false.\nOnly replace matching colors which are at the beginning or end of the line, or are space separated from the text around them. For example, due to the trailing period: I like rgb(1, 2, 3) and rgb(2, 3, 4). becomes I like COLOR and rgb(2, 3, 4).\nReturn the text that replaced all RGB or hex colors replaces with the word COLOR."
  },
  {
    "objectID": "hw1.html#part-3-text-processing-in-python",
    "href": "hw1.html#part-3-text-processing-in-python",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Part 3: Text Processing in Python",
    "text": "Part 3: Text Processing in Python\nFor this part, you will be playing with a small data set of wine reviews (see the Data section above for download instructions).\nwine.txt is in the format of one review per line, followed but a star rating between 1 and 5 (except for 3 reviews, where the review decided to go rogue and give 6 stars. Pft.) The text of the review and the star rating are separated by a single tab character. There is also a file called stopwords.txt, which you will use for question 3.6.\nwine.txt is also a little peculiar in its format. The encoding of the text file is Latin1 / ISO-8859-1 and depending on the OS of your machine, the default encoding used when running open() may be this encoding or it could be utf-8 (the default encoding on Linux for example). To ensure compatibility specify the encoding when you read in text files.\nIn the wine_text_processing function in hw1_skeleton.py, write code that answers each of the following questions and prints the answer to standard output, followed by a newline. If you get this output it’s very likely your code works correctly! For questions where there are ties, please break the tie alphabetically (e.g. apple would come before banana). We highly recommend looking into the functions available in the Python string module.\nYou will need to write your code in the wine_text_processing function in the hw1_skeleton.py file to answer the following questions. Please note that you need to print out the answers to each of the following questions, like below:\nYou can choose how you split the text into words (tokenize). Just make sure it’s more sophisticated than splitting on whitespace. Any packages may be used for tokenization.\nQuestion 3.1 outputs: `your answer`.\n \nQuestion 3.2 outputs: `your answer`.\n \nQuestion 3.3 outputs: `your answer`.\n...\n3.1. What is the distribution of star ratings?\n3.2. What are the 10 most common words used across all of the reviews, and how many times is each used?\n3.3. How many times does the word a appear?\n3.4. How many times does the word fruit appear?\n3.5. How many times does the word mineral appear?\n3.6. Common words (like a) are not as interesting as uncommon words (like mineral). In natural language processing, we call these common words stop words and often remove them before we process text. stopwords.txt gives you a list of some very common words. Remove these stopwords from your reviews. Also, try converting all the words to lowercase (since we probably don’t want to count fruit and Fruit as two different words). Now what are the 10 most common words across all of the reviews, and how many times is each used?\n3.7. You should continue to use the preprocessed reviews for the following questions (lowercased, no stopwords). What are the 10 most used words among the 5-star reviews, and how many times is each used?\n3.8. What are the 10 most used words among the 1-star reviews, and how many times is each used?\n3.9. Gather two sets of reviews: 1) Those that use the word red and 2) those that use the word white. What are the 10 most frequent words in the red reviews which do not appear in the white reviews?\n3.10. What are the 10 most frequent words in the white reviews which do not appear in the red reviews?"
  },
  {
    "objectID": "hw1.html#deliverables",
    "href": "hw1.html#deliverables",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Deliverables",
    "text": "Deliverables\n\nYour ouput CSV from Part 1, named spanish_test.csv\nA modified hw1_skeleton.py file that contains your solutions\nA README.txt file explaining\n\nhow to run your code\nwhat version of Python you used\na requirements.txt file listing all Python packages and their versions in your environment (or on your system if you did not use a virtual environment). This may be created using pip freeze &gt; requirements.txt, conda list -e &gt; requirements.txt if using Anaconda, or through the pipenv package.\nany additional resources, references, or web pages you’ve consulted\nany person with whom you’ve discussed the assignment and describe the nature of your discussions\nany generative AI tool used, and how it was used\nany unresolved issues or problems\n\n\nPlease submit this material on Canvas as individual files. Only files with .py or .txt file extensions will be accepted. If you used Jupyter Notebook to complete the assignment, please download it as a .py script."
  },
  {
    "objectID": "hw1.html#grading",
    "href": "hw1.html#grading",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Grading",
    "text": "Grading\nWe will be running your code on a different input file to test its performance.  This assignment is worth 90 points."
  },
  {
    "objectID": "hw1.html#acknowledgments",
    "href": "hw1.html#acknowledgments",
    "title": "Homework 1: Text and string processing in Python",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nThis assignment is adapted from Prof. Mark Yatskar and Prof. Lorraine Li."
  },
  {
    "objectID": "hw0.html",
    "href": "hw0.html",
    "title": "Homework 0: CRCD JupyterHub setup",
    "section": "",
    "text": "Due 2025-01-22, 11:59pm. Instructions last updated 2025-01-17.\nThis assignment is worth 5 points of extra credit. It is not required.\nThis assignment is simply for you to get set up with installing Python packages successfully on the CRCD JupyterHub, which we will use for in-class coding activities and likely some homework assignments and project work in this class."
  },
  {
    "objectID": "hw0.html#instructions",
    "href": "hw0.html#instructions",
    "title": "Homework 0: CRCD JupyterHub setup",
    "section": "Instructions",
    "text": "Instructions\n\nMake sure you can log in to the CRCD JupyterHub at jupyter.crc.pitt.edu with your Pitt credentials. If you are off-campus or not on WIRELESS-PITTNET, you will need to log in to the Pitt VPN through the GlobalProtect app. Instructions for setting that up are here.\nClick the following nbgitpuller link. You can select the default Teach - 6 cores, 3 hours as your job profile.\nDouble-click session2_text_normalization.ipynb on the left-hand side panel to open the Jupyter notebook. It should not matter what kernel is selected. The default Python 3 (ipykernel) is fine.\nRun the first set of cells under the Setup section. That is all you have to do. You do not have to run the rest of the notebook.\nTake a screenshot of the output of those cells and submit it on Canvas. Ideally you are able to import nltk, but even if there are errors, that’s okay! You will still get extra credit, and I will message you on Canvas to try to figure any issues out."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "",
    "text": "School of Computing and Information, University of Pittsburgh\nSpring 2025"
  },
  {
    "objectID": "index.html#participation-grade",
    "href": "index.html#participation-grade",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Participation grade",
    "text": "Participation grade\nIn-class, collaborative activities are better learning experiences when students come to class and participate. To encourage participation, there is a participation grade worth 10% of the total course grade. The majority of that grade comes from attendance, which will be taken via Top Hat on randomly selected class sessions. The rest of the grade will be assigned based on whether a student asked questions in class or otherwise (such as during office hours), or partipated in in-class activites. If you did any of this basic engagement, full credit will be awarded."
  },
  {
    "objectID": "index.html#grading-scale",
    "href": "index.html#grading-scale",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Grading scale",
    "text": "Grading scale\n\n\n\nRange\nLetter grade\n\n\n\n\n92.5 – 100%\nA\n\n\n90.0 – &lt;92.5%\nA-\n\n\n87.5 – &lt;90.0%\nB+\n\n\n82.5 – &lt;87.5%\nB\n\n\n80.0 – &lt;82.5%\nB-\n\n\n77.5 – &lt;80.0%\nC+\n\n\n72.5 – &lt;77.5%\nC\n\n\n70.0 – &lt;72.5%\nC-\n\n\n67.5 – &lt;70.0%\nD+\n\n\n62.5 – &lt;67.5%\nD\n\n\n60.0 – &lt;62.5%\nD-\n\n\n&lt; 60%\nF\n\n\n\nFeel free to contact the instructor or schedule an office hours appointment to talk about any issues you might have with your grade."
  },
  {
    "objectID": "index.html#late-work-policy",
    "href": "index.html#late-work-policy",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Late work policy",
    "text": "Late work policy\nStudents are granted 5 total late days across all homework assignments and quizzes without penalty. After those five late days, you will be penalized 10% for each day that your submission is late except in extreme unforeseen circumstances. Group project work will be penalized 10% for each day late. No late work will be accepted for the project report."
  },
  {
    "objectID": "index.html#assignment-resubmission-policy",
    "href": "index.html#assignment-resubmission-policy",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Assignment resubmission policy",
    "text": "Assignment resubmission policy\nIf you are unsatisfied with your grade on an assignment and wish to resubmit work, talk with the instructor. Resubmissions are handled case by case, but are generally accepted in cases where parts of the assignment are missing (sections of the rubric are 0). Updated or added text in resubmitted reports must be highlighted in yellow. Resubmissions are subject to an automatic 10% deduction. Only 1 resubmission per homework assignment will be accepted."
  },
  {
    "objectID": "index.html#academic-integrity-policy",
    "href": "index.html#academic-integrity-policy",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Academic integrity policy",
    "text": "Academic integrity policy\nStudents in this course will be expected to comply with the University of Pittsburgh’s Policy on Academic Integrity. Any student suspected of violating this obligation for any reason during the semester will be required to participate in the procedural process, initiated at the instructor level, as outlined in the University Guidelines on Academic Integrity. To learn more about Academic Integrity, visit the Academic Integrity Guide for an overview of the topic. For hands-on practice, complete the Academic Integrity Modules.\n\nGenerative AI policy\nYou are allowed to use generative AI programs (ChatGPT, etc.) as a student in this course in limited circumstances. Since much of this course is about developing such tools in NLP, using currently available tools can expose you to the current capabilities and limitations of such systems.\nHowever, your ethical responsibilities as a student remain the same. You must follow the University of Pittsburgh’s Policy on Academic Integrity. Here are some principles to keep in mind that can help you determine whether or not a specific use of generative AI is acceptable in this course (for all forms of generation: writing, code, images or other forms). Please ask the instructor if you are not sure about a specific use. You will not be blamed or retaliated against for asking.\n\nUse as an aid, not for a finished product. LLMs could be used in this course to generate ideas, draft bibliographies, study guides, or for revising their existing writing. Use for drafting entire homework or project reports is not acceptable, even if students revise this draft, since being able to communicate NLP procedures and research is a learning objective. Also keep in mind that language models have no notion of reality and will hallucinate facts and citations.\nCite its use. The University of Pittsburgh’s academic integrity policy applies to all uncited or improperly cited use of content, whether that work is created by human beings alone or in collaboration with a generative AI. If you use a generative AI tool to develop content for an assignment, you are required to cite the tool’s contribution to your work. In practice, cutting and pasting content from any source without citation is plagiarism. Likewise, paraphrasing content from a generative AI without citation is plagiarism. Similarly, using any generative AI tool without appropriate acknowledgement will be treated as plagiarism. See the APA guidelines on how to cite ChatGPT. Publicly available LLMs are relatively new, and so best practices in education are still being worked out. Citing your use of LLMs will also inform the instructor on how such tools are being used in education for developing better future policies.\nYou are responsible for the work you turn in. As we will discuss in this course, LLMs and other generative AI systems can and do generate biased, socially problematic language and assert unfounded claims. Ultimately the text you submit will be treated as reflecting your own work, and you are responsible for it.\n\nAdapted from faculty in the Carnegie Mellon University Heinz College of Information Systems and Public Policy, with guidance from the Carnegie Mellon University Eberly Center for Teaching Excellence."
  },
  {
    "objectID": "index.html#disability-rights",
    "href": "index.html#disability-rights",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Disability rights",
    "text": "Disability rights\nThe teaching staff of this course view disabilities as deficits not in disabled people but in the institutions and societies that are structured to disadvantage disabled people. If you have a disability (visible or invisible), please let us know as soon as possible. You don’t need to tell us the nature of the disability. You are encouraged to work with Disability Resources and Services (DRS), 140 William Pitt Union, (412) 648-7890, drsrecep@pitt.edu, (412) 228-5347 for P3 ASL users, as early as possible in the term. DRS will work with you to determine reasonable accommodations for this course. This might include lecture materials that are usable by people with visual disabilities, sign language interpretation, captioning, flexible due dates, etc.\nAdapted from policies by David Mortensen and Lori Levin at Carnegie Mellon University."
  },
  {
    "objectID": "index.html#religious-observances",
    "href": "index.html#religious-observances",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Religious Observances",
    "text": "Religious Observances\nThe observance of religious holidays (activities observed by a religious group of which a student is a member) and cultural practices are an important reflection of diversity. As your instructor, I am committed to providing equivalent educational opportunities to students of all belief systems. At the beginning of the semester, you should review the course requirements to identify foreseeable conflicts with assignments, exams, or other required attendance. Please contact me as early as possible to allow time for us to discuss and make fair and reasonable adjustments to the schedule and/or tasks."
  },
  {
    "objectID": "index.html#statement-on-scholarly-discourse",
    "href": "index.html#statement-on-scholarly-discourse",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Statement on scholarly discourse",
    "text": "Statement on scholarly discourse\nIn this course we will be discussing some complex issues on which all of us have strong feelings and, in many cases, unfounded attitudes. It is essential that we approach this endeavor with our minds open to evidence that may conflict with our presuppositions. Moreover, it is vital that we treat each other’s opinions and comments with courtesy even when they diverge and conflict with our own. We must avoid personal attacks and the use of ad hominem arguments to invalidate each other’s positions. Instead, we must develop a culture of civil argumentation, wherein all positions have the right to be defended and argued against in intellectually reasoned ways. It is this standard that everyone must accept in order to stay in this class; a standard that applies to all inquiry in the university, but whose observance is especially important in a course whose subject matter is so emotionally charged.\nAdapted from a California State University course: Race, Racism and Critical Thinking."
  },
  {
    "objectID": "index.html#student-wellness",
    "href": "index.html#student-wellness",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Student wellness",
    "text": "Student wellness\nCollege can be an exciting and challenging time for students. Taking time to maintain your well-being and seek appropriate support can help you achieve your goals and lead a fulfilling life. It can be helpful to remember that we all benefit from assistance and guidance at times, and there are many resources available to support your well-being while you are at Pitt. You are encouraged to visit Thrive@Pitt to learn more about well-being and the many campus resources available to help you thrive.\nIf you or anyone you know experiences overwhelming academic stress, persistent difficult feelings and/or challenging life events, you are strongly encouraged to seek support. In addition to reaching out to friends and loved ones, consider connecting with a faculty member you trust for assistance connecting to helpful resources.\nThe University Counseling Center is also here for you. You can call 412-648-7930 at any time to connect with a clinician. If you or someone you know is feeling suicidal, please call the University Counseling Center at any time at 412-648-7930. You can also contact Resolve Crisis Network at 888-796-8226."
  },
  {
    "objectID": "index.html#equity-and-inclusion",
    "href": "index.html#equity-and-inclusion",
    "title": "CS 1671/2071 Human Language Technologies",
    "section": "Equity and inclusion",
    "text": "Equity and inclusion\nThe University of Pittsburgh does not tolerate any form of discrimination, harassment, or retaliation based on disability, race, color, religion, national origin, ancestry, genetic information, marital status, familial status, sex, age, sexual orientation, veteran status or gender identity or other factors as stated in the University’s Title IX policy. The University is committed to taking prompt action to end a hostile environment that interferes with the University’s mission. For more information about policies, procedures, and practices, visit the Civil Rights & Title IX Compliance web page.\nI ask that everyone in the class strive to help ensure that other members of this class can learn in a supportive and respectful environment. If there are instances of the aforementioned issues, please contact the Title IX Coordinator, by calling 412-648-7860, or emailing titleixcoordinator@pitt.edu. Reports can also be filed online. You may also choose to report this to a faculty/staff member; they are required to communicate this to the University’s Office of Diversity and Inclusion. If you wish to maintain complete confidentiality, you may also contact the University Counseling Center (412-648-7930)."
  }
]